<project name="target" default="build_war_anthill" basedir=".">
	<property file="build.properties" />

	<!--
		TARGET: COMPILE
			Compiles the source directory without anthill dependencies
		-->
	<target name="compile" depends="config_cache">
		<delete dir="${build.classes.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<javac srcdir="${source.dir}" destdir="${build.classes.dir}" source="1.5"  debug="true" debuglevel="lines,vars,source" excludes="**/test/*">
			<classpath>
				<fileset dir="${source.lib.dir}">
					<include name="*.jar"/>
				</fileset>
				<fileset dir="${source.nondeploy.lib.dir}">
					<include name="*.jar"/>
				</fileset>				
				<fileset dir="${anthill.dependency.artifacts.dir}">
					<include name="*.jar"/>					
				</fileset>
			</classpath>
		</javac>
	</target>
	
	<!--
		TARGET: config_cache
		Configures the echache.xml file using the settings in the
		build.properties file
	-->
	<target name="config_cache">
		<delete file="src/ehcache.xml"/>
		<copy file="src/ehcache.xml.template" tofile="src/ehcache.xml"/>
		<replaceregexp file="src/ehcache.xml" match="@echache_path@" replace="${jboss.install.dir}server/${jboss.server.name}/tmp/${app.war.name}" flags="g"/>
	</target>
	<!--
		TARGET: config_analysis_server
		Configures the JMS.properties file using the settings in the
		build.properties file
	-->
	
	<!-- Analysis server configuration is now handled by external properties.
	
	<target name="config_analysis_server" depends="config_cache">
		<delete file="src/jms.properties"/>
		<copy file="src/jms.properties.template" tofile="src/jms.properties"/>
		<replaceregexp file="src/jms.properties" match="@JBOSS_URL@" replace="${analytical.jboss.jndi}" flags="g"/>
		<replaceregexp file="src/jms.properties" match="@ANALYSIS_REQUEST_QUEUE@" replace="${analytical.jms.requestQueue}" flags="g"/>
		<replaceregexp file="src/jms.properties" match="@ANALYSIS_RESPONSE_QUEUE@" replace="${analytical.jms.responseQueue}" flags="g"/>
	</target>
	
	-->
	
	
	<!--
        TARGET: copy_resources
        Copies all the bundle resources to the WEB-INF/classes/ folder
    -->
	<target name="copy_resources" depends="compile">
		<copy todir="${build.classes.dir}">
			<fileset dir="${source.dir}">
				<include name="*.xml"/>
				<exclude name="target-jbossmq-destinations-service.xml"/>
				<include name="*.properties"/>
				<include name="*.dtd"/>
				<include name="*.xsd"/>
			</fileset>
		</copy>
	</target>
		
		<target name="config-jbossmq">
			<copy file="conf\target-jbossmq-destinations-service.xml" todir="${jboss.deploy.dir}\jms"/>
		</target>
	<!--
		TARGET: build_war
		This will build the war file and should be used instead of the 
		build_war_anthill task (which is intended to be used by SCM)
	-->
	<target name="build_war_anthill" depends="copy_resources">
		<delete file="${app.war.name}.war"/>
		<war destfile="${app.war.name}.war" webxml="${webapp.dir}/WEB-INF/web.xml">
			<fileset file="${webapp.dir}/*.*"/>
			<zipfileset dir="${webapp.dir}/css" prefix="css"/>
			<zipfileset dir="${webapp.dir}/images" prefix="images"/>
			<zipfileset dir="${webapp.dir}/js" prefix="js"/>
			<!-- <zipfileset dir="${webapp.dir}/tutorials" prefix="tutorials"/> needed for later -->
			<!-- <zipfileset dir="${webapp.dir}/xsl" prefix="xsl"/> -->
			<zipfileset dir="${anthill.dependency.artifacts.dir}" prefix="WEB-INF/lib" >
				<include name="caintegrator-analysis-commons.jar"/>
				<include name="caintegrator-application-commons.jar"/>
				<include name="caintegrator-spec.jar"/>
			</zipfileset>
			<webinf dir="${webapp.dir}/WEB-INF"/>
		</war>
		<copy file="${app.war.name}.war" todir="${anthill.artifacts.dir}"/>
	</target>
	
	<!--
	<target name="config_application_context">		
			<delete file="DataSourceContext.properties"/>
			<copy file="conf/DataSourceContext.properties.template" tofile="DataSourceContext.properties"/>
	        <replaceregexp file="DataSourceContext.properties" match="__APPLICATION_NAME__" replace="${application_name}" flags="g"/>
			<move file="DataSourceContext.properties" todir="${source.dir}"/>
	</target>
	-->
	
	<property name="build.lib"
	     value="${basedir}/WebRoot/WEB-INF/lib" />	
	<property name="caintegrator.spec.dir"
	     value="${basedir}/../caintegrator-spec/bin" />	
	
	<path id="toolslib">
		<path location="${basedir}/not_deployed_jars/hibernate-tools.jar" />
		<path location="${build.lib}/hibernate3.jar" />
		<path location="${build.lib}/commons-logging-1.0.4.jar" />
		<path location="${build.lib}/dom4j-1.6.1.jar" />
		<path location="${build.lib}/commons-collections-2.1.1.jar" />
		<path location="${caintegrator.spec.dir}" />
	</path>

	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="toolslib" />
	<target name="schemaexport" depends="" description="Exports a generated schema from the Hibernate mapping files">
		<hibernatetool destdir="${basedir}/db">
			<classpath path="${build.dir}" />

			<configuration configurationFile="${basedir}/WebRoot/WEB-INF/target-domain-hibernate.cfg.xml" />

			<hbm2ddl drop="true" create="true" export="false" outputfilename="target-ddl.sql" delimiter=";" format="true" />
		</hibernatetool>
	</target>
</project>
